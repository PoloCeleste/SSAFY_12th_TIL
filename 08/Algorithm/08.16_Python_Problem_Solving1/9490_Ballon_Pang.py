"""
9490. 풍선팡
종이 꽃가루가 들어있는 풍선이 M개씩 N개의 줄에 붙어있고, 어떤 풍선을
터뜨리면 안에 든 종이 꽃가루 개수만큼 상하 좌우의 풍선이 추가로 터지게 되는 게임이 있다.
예를 들어 풍선에 든 꽃가루가 1개씩일 때, 가운데 풍선을 터뜨리면 상하좌우의 풍선이
추가로 1개씩 터지면서 총 5개의 꽃가루가 날리게 된다.
NxM개의 풍선에 들어있는 종이 꽃가루 개수A가 주어지면, 한 개의 풍선을 선택했을 때
날릴 수 있는 꽃가루의 합 중 최대값을 출력하는 프로그램을 만드시오.
(3<=N, M<=100)

[입력]
첫 줄에 테스트케이스 수 T, 다음 줄부터 테스트케이스 별로 첫 줄에 N과 M,
이후 N줄에 걸쳐 M개씩 풍선에 든 종이 꽃가루 개수가 주어진다.

[출력]
#과 테스트케이스 번호, 빈칸에 이어 종이 꽃가루의 최대 개수를 출력한다.
"""
dij = [[0,1], [1,0], [0,-1], [-1,0]]
T = int(input())
for tc in range(1, T+1):
    N, M = map(int, input().split()) # 행, 열 크기
    arr = [list(map(int, input().split())) for _ in range(N)] # 풍선별 꽃가루 수
    
    max_v = 0 # 꽃가루 최대 합계
    for i in range(N):
        for j in range(N):
            cnt=arr[i][j] # 터트린 풍선에서 나오는 꽃가루 수
            for di,dj in dij: # 델타탐색
                for l in range(1, arr[i][j]+1):
                    ni, nj = i+di*l, j+dj*l
                    if ni<0 or nj<0 or ni>=N or nj>=M:continue
                    cnt+=arr[ni][nj]
            max_v=max(max_v, cnt)
    print(f'#{tc} {max_v}')
'''
[입력]
3
3 5
2 1 1 2 2 
2 2 1 2 2 
2 2 1 1 2 
5 5
3 4 1 2 3 
3 4 1 3 2 
2 3 2 4 1 
1 4 4 1 3 
2 2 3 4 4 
5 8
1 3 4 4 4 4 3 3 
4 1 2 4 3 1 4 4 
4 1 4 4 1 4 2 1 
3 2 4 2 1 1 2 1 
4 4 1 4 4 2 2 2 
'''

'''
[출력]
#1 10
#2 26
#3 40
'''